name: CI

on:
  push:
    branches: ["main", "master", "develop", "dev"]
  pull_request:

jobs:
  python-tests:
    name: Python Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Configure OpenAI key for tests
        run: |
          KEY="${{ secrets.OPENAI_KEY }}"
          if [ -n "${KEY}" ]; then
            echo "::add-mask::${KEY}"
          else
            KEY="mock-openai-key"
          fi
          echo "OPENAI_KEY=${KEY}" >> "$GITHUB_ENV"

      - name: Run unit tests with coverage
        run: coverage run -m pytest

      - name: Run behave tests with coverage
        run: coverage run --append -m behave

      - name: Generate coverage reports
        run: |
          coverage xml
          coverage html

      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-coverage
          path: |
            coverage.xml
            htmlcov
            .coverage

  python-lint:
    name: Python Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install linting tools
        run: |
          python -m pip install --upgrade pip
          pip install black flake8

      - name: Run black check
        run: black --check .

      - name: Run flake8
        run: flake8 .

  go-vet:
    name: Go Vet
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Download Go modules
        run: go mod download

      - name: Run go test
        run: go test ./...

      - name: Run go vet
        run: go vet ./...

  docker-build:
    name: Docker Build
    runs-on: ubuntu-latest
    needs:
      - python-tests
      - python-lint
      - go-vet
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: docker build .

      - name: Save Docker image digest
        run: docker image inspect $(docker image ls --format '{{.ID}}' | head -n 1) --format '{{json .}}' > docker-image.json

      - name: Upload Docker build artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image-metadata
          path: docker-image.json
